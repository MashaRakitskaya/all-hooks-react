{"version":3,"sources":["components/Todo.js","components/Todos.js","components/User.js","components/Users.js","components/Header.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Todo","props","console","log","className","todo","title","React","memo","Todos","todos","completeTodo","removeTodo","updateTodo","useState","setTodo","ref","useRef","clicked","setClicked","numberTodos","useMemo","length","num","handleSubmit","evt","preventDefault","onClick","s","current","style","visibility","type","onSubmit","noValidate","value","id","name","placeholder","required","onChange","e","target","map","item","User","user","Users","users","Header","path","to","BASE_URL","checkAnswerCorrectness","response","ok","json","Promise","reject","status","App","setTodos","setUser","useEffect","fetch","then","catch","err","handleAddTodo","pageTitle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c813a70.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Todo(props) {\r\nconsole.log('mama');\r\n    return(\r\n        <article className=\"todo\">\r\n            <div className=\"todo__box\">\r\n                <h2 className=\"todo__text\">{props.todo.title}</h2>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\nexport default React.memo(Todo);\r\n// export default Todo;","import React from 'react';\r\n// import * as api from \"../utils/api\";\r\nimport { useEffect, useState, useRef, useMemo, useCallback } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction num(todos) {\r\n    //не происходит повторный вызов функции(мемеизация значений функции)\r\n    console.log(todos);\r\n    return todos.length\r\n}\r\n\r\nfunction Todos({todos, completeTodo, removeTodo, updateTodo}) {\r\n    // console.log('aaaa');\r\n    const [todo, setTodo] = useState('');\r\n    //useRef для работы с Dom элементами напрямую, не происходит рендеринг всего компонента \r\n    const ref = useRef(null);\r\n    const [clicked, setClicked] = useState(false);\r\n    const numberTodos = useMemo(() => num(todos), [todos]);\r\n    // const numberTodos = num(todos);\r\n\r\n    function handleChangeTodo(e) {\r\n        setTodo(e.target.value);\r\n    };\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        // console.log(refe.current.focus());\r\n    }\r\n\r\n    function showSomething() {\r\n        setClicked(s => !s);\r\n        ref.current.style.visibility =\"visible\"\r\n    }\r\n    \r\n    return(\r\n        <main className=\"content\">\r\n            <section className=\"add-todo\">\r\n                <h1 className=\"add-todo__question\">What's the Plan for Today?</h1>\r\n                <div className=\"click-box\">\r\n                    <button onClick={showSomething} className=\"сlick\" type=\"button\">Нажми</button>\r\n                    {clicked ? (\r\n                        <div ref={ref} className=\"cat\"></div>\r\n                    ) : (\r\n                        <div ref={ref} className=\"cat_hidden\"></div>\r\n                    )}\r\n                </div>\r\n                <form className=\"add-todo__form\" onSubmit={handleSubmit} noValidate>\r\n                    <input\r\n                        value={todo}\r\n                        id='auth-title-input'\r\n                        className=\"add-todo__input\"\r\n                        type=\"text\"\r\n                        name=\"todo\"\r\n                        placeholder=\"Add a todo\"\r\n                        required\r\n                        onChange={handleChangeTodo}\r\n                    />\r\n                    <button onClick={handleSubmit} className=\"add-todo__button\" type=\"button\">add Todo</button>\r\n                </form>\r\n            </section>\r\n            <p className=\"count-todos\">Number of todos: <span className=\"span\">{numberTodos}</span></p> \r\n            <section className=\"todos\">\r\n            {todos.map((item) => {\r\n                    return(\r\n                        <Todo\r\n                            key={item.id}\r\n                            todo={item}\r\n                            completeTodo={completeTodo}\r\n                            removeTodo={removeTodo}\r\n                            updateTodo={updateTodo}\r\n                        />\r\n                    )\r\n                } \r\n            )}\r\n        </section>\r\n            \r\n        </main>\r\n    )\r\n}\r\nexport default React.memo(Todos);","import React from 'react';\r\n\r\nfunction User(props) {\r\nconsole.log('User');\r\n    return(\r\n        <article className=\"todo\">\r\n            <div className=\"todo__box\">\r\n                <h2 className=\"todo__text\">{props.user.name}</h2>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n// export default User;\r\nexport default React.memo(User);","import React from 'react';\r\nimport User from \"./User\";\r\n\r\nfunction Users({users}) {\r\n    \r\n    return(\r\n        <main className=\"content\">\r\n            <section className=\"todos\">\r\n            {users.map((item) => {\r\n                    return(\r\n                        <User\r\n                            key={item.id}\r\n                            user={item}\r\n                        />\r\n                    )\r\n                } \r\n            )}\r\n        </section>\r\n            \r\n        </main>\r\n    )\r\n}\r\nexport default React.memo(Users);","import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <Switch>\r\n                <Route path=\"/users\">\r\n                    <Link to=\"/todos\" className=\"header__todos\">\r\n                        Todos\r\n                    </Link>\r\n                </Route>\r\n                <Route path=\"/todos\">\r\n                    <Link to=\"/users\" className=\"header__users\">\r\n                        Users\r\n                    </Link>\r\n                </Route>\r\n                \r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","export const BASE_URL = 'http://jsonplaceholder.typicode.com';\r\n\r\nconst checkAnswerCorrectness = (response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } \r\n    return Promise.reject(`Ошибка ${response.status}`)\r\n};\r\n\r\nexport const getInitialTodos = () => {\r\n  return fetch(`${BASE_URL}/todos`)\r\n  .then(response => checkAnswerCorrectness(response))\r\n}\r\nexport const getInitialUser = () => {\r\n  return fetch(`${BASE_URL}/users`)\r\n  .then(response => checkAnswerCorrectness(response))\r\n}\r\n","import React from 'react';\r\nimport Todos from \"./Todos\";\r\nimport Users from './Users';\r\nimport Header from './Header'\r\nimport * as api from \"../utils/api\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [users, setUser] = useState([]);\r\n    function handleAddTodo() {\r\n\r\n    }\r\n    useEffect(() => {\r\n        api.getInitialTodos()\r\n        .then(response => setTodos(response))\r\n        .catch(err => console.log(`Ошибка получения информации${err}`));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        api.getInitialUser()\r\n        // .then(response => console.log(response))\r\n        .then(response => setUser(response))\r\n        .catch(err => console.log(`Ошибка получения информации${err}`));\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"page\" >\r\n            <div className=\"page__container\">\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path=\"/todos\">\r\n                        <Todos \r\n                            handleAddTodo={handleAddTodo}\r\n                            todos={todos}\r\n                            pageTitle={'todos'}\r\n                        />\r\n                    </Route>\r\n                    <Route path=\"/users\">\r\n                        <Users\r\n                            users={users}\r\n                            pageTitle={'users'} \r\n                        />\r\n                    </Route>\r\n                    <Route>\r\n                        <Redirect to=\"/todos\" />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            \r\n        </div>    \r\n    )\r\n}\r\nexport default React.memo(App);\r\n// export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter> \n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}